[tox]
isolated_build = true
skipdist = false
envlist =
    py312
    style
    typing

[gh-actions]
python =
    3.12: py312

[testenv]
passenv = *
deps =
    pytest
    pytest-cov
    pytest-dotenv
    pytest-asyncio
    eth-ape
commands =
    pytest --cov --cov-report xml

[testenv:py312]
basepython = python3.12
deps =
    pytest
    pytest-cov
    pytest-dotenv
    pytest-asyncio
    eth-ape
allowlist_externals = 
    npx
    pkill
    sleep
    bash
    curl
    npm
    cat
    ls
setenv =
    CI = true
commands_pre =
    # Ensure Node.js dependencies are installed
    bash -c "echo 'Installing Node.js dependencies...'; npm install --production || (echo 'npm install failed'; exit 1)"
    # Check if required files exist
    bash -c "echo 'Checking required files...'; ls -la package.json hardhat.config.js || (echo 'Required files missing'; exit 1)"
    # Start Hardhat node with better logging
    bash -c "echo 'Starting Hardhat node...'; npx hardhat node --hostname 127.0.0.1 --port 8545 > /tmp/hardhat.log 2>&1 & echo $! > /tmp/hardhat.pid; echo 'Hardhat PID:' $(cat /tmp/hardhat.pid)"
    # Wait longer for startup
    sleep 10
    # Enhanced startup check with better debugging
    bash -c "timeout=60; echo 'Waiting for Hardhat to start (up to $timeout seconds)...'; while [ $timeout -gt 0 ]; do if curl -s -f http://127.0.0.1:8545 > /dev/null 2>&1; then echo 'Hardhat node is ready on port 8545'; break; else echo 'Waiting for hardhat... ($timeout seconds left)'; sleep 2; timeout=$((timeout-2)); fi; done; if [ $timeout -le 0 ]; then echo 'Hardhat failed to start within timeout. Checking logs:'; cat /tmp/hardhat.log 2>/dev/null || echo 'No hardhat.log found'; ps aux | grep hardhat || echo 'No hardhat processes found'; exit 1; fi"
commands =
    ape plugins install . --upgrade --yes
    ape compile
    pytest --cov --cov-report xml
commands_post =
    # Enhanced cleanup with better error handling
    - bash -c "echo 'Cleaning up Hardhat processes...'; if [ -f /tmp/hardhat.pid ]; then echo 'Killing PID:' $(cat /tmp/hardhat.pid); kill $(cat /tmp/hardhat.pid) 2>/dev/null || echo 'Process already dead'; rm /tmp/hardhat.pid; fi"
    - bash -c "pkill -f 'hardhat node' 2>/dev/null || echo 'No hardhat processes to kill'"
    - bash -c "echo 'Final process check:'; ps aux | grep hardhat | grep -v grep || echo 'No hardhat processes remaining'"

[testenv:style]
deps = pre-commit
skip_install = true
commands = pre-commit run --all-files

[testenv:typing]
deps =
    mypy
    mypy-extensions
    types-requests
    types-PyYAML
commands = mypy --strict src --implicit-reexport --ignore-missing-imports --disable-error-code misc

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.12
deps =
    mkdocs-material
    mkdocstrings[python]

commands =
    mkdocs build -v
